# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
orbs:
 # Choose either one of the orbs below
    # welcome: circleci/welcome-orb@0.4.1
    # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  #say-hello:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    #docker:
      #- image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    #steps:
      #- checkout
      #- run:
          #name: "Say hello"
          #command: "echo Hello, World!"
  create_insfrastructure:
    docker:
      - image: amazon/aws-cli
    steps: 
      - checkout  # check out the code in the project directory
      - run:
        name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
      # Fail the job intentionally to simulate an error.
      # Uncomment the line below if you want to fail the current step
      # - run: return 1
      #- destroy_environment
# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  #say-hello-workflow:
    #jobs:
      #- say-hello
  my_workflow:
        jobs:
          - create_infrastructure
